using System.Net;
using System.Net.Sockets;

namespace FastDFS.Client.Component
{
    /// <summary>
    /// 服务器信息
    /// </summary>
    public class ServerInfo
    {
        protected internal string _ipAddress;
        protected internal int _port;

        /// <summary>
        /// 初始化<see cref="ServerInfo"/>对象.
        /// </summary>
        /// <param name="ipAddress">IP地址.</param>
        /// <param name="port">端口</param>
        public ServerInfo(string ipAddress, int port)
        {
            _ipAddress = ipAddress;
            _port = port;
        }

        /// <summary>
        /// 得到或者设置IP地址
        /// </summary>
        /// <value>IP地址.</value>
        public virtual string IpAddress
        {
            get { return _ipAddress; }
            set { _ipAddress = value; }
        }

        /// <summary>
        /// 得到或者设置端口.
        /// </summary>
        /// <value>端口.</value>
        public virtual int Port
        {
            get { return _port; }
            set { _port = value; }
        }

        /// <summary>
        /// 连接到服务器
        /// </summary>
        /// <returns>服务器的连接</returns>
        public virtual TcpClient Connect()
        {
            TcpClient tcpClient = new TcpClient();
            tcpClient.ReceiveTimeout = FastDFSService.NetworkTimeout;
            tcpClient.Connect(IPAddress.Parse(_ipAddress), _port);
            return tcpClient;
        }
    }
}